name: React Native Android Build

on:
  push:
     branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node: [20, 22]
        # react-native: ["0.70","0.71","0.72","0.73","0.74","0.75","0.76","0.77", "0.78", "0.79"]
        # jdk: [11,17]
        react-native-jdk: [
          {
            rn: "0.71",
            jdk: 11,
            datetimepicker: "7.x",
            react-native-svg: "14.x"
          },
          {
            rn: "0.72",
            jdk: 11,
            datetimepicker: "7.x",
            react-native-svg: "14.x"
          },
          {
            rn: "0.73",
            jdk: 17,
            datetimepicker: "latest",
            react-native-svg: "latest"
          },
          {
            rn: "0.74",
            jdk: 17,
            datetimepicker: "latest",
            react-native-svg: "latest"
          },
          {
            rn: "0.75",
            jdk: 17,
            datetimepicker: "latest",
            react-native-svg: "latest"
          },
          {
            rn: "0.76",
            jdk: 17,
            datetimepicker: "latest",
            react-native-svg: "latest"
          },
          {
            rn: "0.77",
            jdk: 17,
            datetimepicker: "latest",
            react-native-svg: "latest"
          },
          {
            rn: "0.78",
            jdk: 17,
            datetimepicker: "latest",
            react-native-svg: "latest"
          },
          {
            rn: "0.79",
            jdk: 17,
            datetimepicker: "latest",
            react-native-svg: "latest"
          },
        ]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js LTS
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: ${{ matrix.react-native-jdk.jdk }}
      
    - name: Create new React Native project
      run: |
        git config --global user.email "action@github.com"
        git config --global user.name "Github Action"
        cd ..
        npx @react-native-community/cli init MyApp --version ${{ matrix.react-native-jdk.rn }}
        cd MyApp
        rm App.tsx
        git add .
        git commit -m "Remvoed App.tsx"

    - name: Update code
      run: |
        ls
        cp main.patch ../MyApp/main.patch
        cd ../MyApp
        git am main.patch
        cat App.tsx
        
    - name: Install dependencies
      run: |
        cd ../MyApp
        npm install
        # npm i @cometchat/chat-uikit-react-native
        npm i @cometchat/chat-uikit-react-native@5.0.1-beta-5 --registry=https://npm.cloudsmith.io/cometchat/call-team/
        npm i @cometchat/chat-sdk-react-native
        npm i @react-native-community/datetimepicker@${{ matrix.react-native-jdk.datetimepicker }}
        npm i @react-native-clipboard/clipboard
        npm i react-native-svg@${{ matrix.react-native-jdk.react-native-svg }}
        npm i react-native-video
        npm i @react-native-async-storage/async-storage
        npm i @cometchat/calls-sdk-react-native
        npm i @react-native-community/netinfo
        npm i react-native-background-timer
        npm i react-native-callstats
        npm i react-native-webrtc@1.106.1

        
    - name: Build Android Release APK
      run: |
        cd ../MyApp
        cd android
        chmod +x gradlew
        ./gradlew assembleRelease

    - name: Copy APK
      run: |
        cp ../MyApp/android/app/build/outputs/apk/release/app-release.apk app-release.apk
        
    - name: Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: app-release-${{ matrix.node }}-${{ matrix.react-native-jdk.jdk }}-${{ matrix.react-native-jdk.rn }}.apk
        continue-on-error: true
